import{_ as i,a as o,b as r}from"./virtu_arch3-d42fa25a.js";import{_ as l,M as p,p as c,q as d,R as a,t as n,N as e,a1 as t}from"./framework-96b046e1.js";const u="/learning-2024-devops/assets/bridge-0fad1e18.png",v="/learning-2024-devops/assets/nat-7f5843e4.png",m="/learning-2024-devops/assets/hostonly-e791de28.png",g="/learning-2024-devops/assets/vsphere-276fe1fc.png",h={},b=t('<h1 id="virtualization" tabindex="-1"><a class="header-anchor" href="#virtualization" aria-hidden="true">#</a> Virtualization</h1><p>This section covers essential concepts and tools related to virtualization, exploring different types of hypervisors, networking setups, scripting for virtual environment management, and tools like Vagrant for streamlined development environments.</p><h2 id="definition" tabindex="-1"><a class="header-anchor" href="#definition" aria-hidden="true">#</a> Definition</h2><p>Virtualization refers to the creation of virtual (rather than physical) versions of computing resources, including operating systems, servers, storage devices, and networks. It enables the efficient utilization of hardware by allowing multiple virtual instances to run on a single physical machine.</p><h2 id="history" tabindex="-1"><a class="header-anchor" href="#history" aria-hidden="true">#</a> History</h2><h3 id="in-the-dark-ages-one-application-on-one-physical-server" tabindex="-1"><a class="header-anchor" href="#in-the-dark-ages-one-application-on-one-physical-server" aria-hidden="true">#</a> In the Dark ages : One application on One physical server</h3><p><img src="'+i+'" alt="virtu1"></p><ul><li>Slow deployment times</li><li>Huge costs</li><li>Wasted resources</li><li>Difficult to scale</li><li>Difficult to migrate</li><li>Vendor lock in</li></ul><h3 id="then-virtualization-one-server-multiple-apps-in-vms" tabindex="-1"><a class="header-anchor" href="#then-virtualization-one-server-multiple-apps-in-vms" aria-hidden="true">#</a> Then, virtualization : One server, multiple apps in VMs</h3><p><img src="'+o+'" alt="virtu2"></p><ul><li>Better resource pooling : One physical machine divided into multiple virtual machines</li><li>Easier to scale</li><li>VMs in the cloud <ul><li>Rapid elasticity</li><li>Pay as you go model</li></ul></li></ul><p><img src="'+r+'" alt="virtu3"></p><h3 id="but-vms" tabindex="-1"><a class="header-anchor" href="#but-vms" aria-hidden="true">#</a> But VMs</h3><ul><li><p>Each VMs stills requires</p><ul><li>CPU allocation</li><li>Storage</li><li>RAM</li><li>An entire guest operating system</li></ul></li><li><p>The more VMs you run, the more resources you need</p></li><li><p>Guest OS means wasted resources</p></li><li><p>Application portability not guaranteed</p></li></ul><h2 id="what-is-an-hypervisor" tabindex="-1"><a class="header-anchor" href="#what-is-an-hypervisor" aria-hidden="true">#</a> What is an hypervisor ?</h2><ul><li>A <strong>hypervisor</strong> or <strong>virtual machine monitor (VMM)</strong> is a piece of computer software, firmware or hardware that creates and runs virtual machines.</li><li>A computer on which a hypervisor is running one or more virtual machines is defined as a <strong>host machine</strong>.</li><li>Each virtual machine is called a <strong>guest machine</strong></li></ul><p>2 types :</p><ul><li><p><strong>Type 1</strong> hypervisor is installed directly on bare-metal hardware, it doesn&#39;t require an additional OS, it is the OS, even it it is a light or minimal OS.</p></li><li><p><strong>Type 2</strong> is more of an application installed on an operating system and not directly on the bare-metal. Ex: VirtualBox and Vmware Workstation</p><ul><li>Advantages: Run on a greater array of HW because the underlying Host OS is controlling HW access, Easy user interface, Data can be secured on the desktop.</li><li>Disadvantages: Decreased security, Loss of Centralized Management, Lower VM Density, Cannot support as many VMs are the first type.</li></ul></li></ul><h2 id="hypervisor-type-ii" tabindex="-1"><a class="header-anchor" href="#hypervisor-type-ii" aria-hidden="true">#</a> Hypervisor Type II</h2><p>Hypervisor Type II, also known as a hosted hypervisor, runs on top of an existing operating system. It allows users to create and manage virtual machines (VMs) without modifying the host system. Popular examples include VirtualBox and VMware Workstation.</p><h3 id="networks" tabindex="-1"><a class="header-anchor" href="#networks" aria-hidden="true">#</a> Networks</h3><p>In virtualization, networks can be configured to facilitate communication between virtual machines, allowing them to share data and resources. Network configurations within virtual environments play a crucial role in creating isolated or interconnected setups, influencing communication and security between VMs.</p><h4 id="bridge" tabindex="-1"><a class="header-anchor" href="#bridge" aria-hidden="true">#</a> Bridge</h4><p>A bridge is created between the virtual network card of the virtualization application and the network card of your physical host.</p><p>The operating system of your physical host shares its physical card with the operating system of your virtual machine(s).</p><p>You must select only one network card from the host machine per point. To communicate, it will require a TCP/IP configuration identical to the other devices on the network</p><p><img src="'+u+'" alt="bridge"></p><h4 id="nat" tabindex="-1"><a class="header-anchor" href="#nat" aria-hidden="true">#</a> NAT</h4><p>Principle of a NAT gateway: masking the IP address of the clients connected to it to exit onto the network. Transparent access to the local network: the host&#39;s IP address is used thanks to the address translation of the NAT process. IP distributed by the virtualization application via a DHCP server Interesting when security is applied to a port access in a room where only one MAC address is allowed.</p><p><img src="'+v+'" alt="nat"></p><h4 id="hostonly" tabindex="-1"><a class="header-anchor" href="#hostonly" aria-hidden="true">#</a> HostOnly</h4><p>As the name suggests, this mode allows only the establishment of a connection between the virtual machine and the physical machine.</p><p><img src="'+m+`" alt="bridge"></p><h3 id="scripting-vms" tabindex="-1"><a class="header-anchor" href="#scripting-vms" aria-hidden="true">#</a> Scripting VMs</h3><p><code>VBoxManage</code> is a command-line interface tool provided by VirtualBox, facilitating the management of VMs and their configurations. It allows for automation and scripting of various VirtualBox operations, enabling tasks like creating VMs, modifying settings, starting or stopping VMs, and more through scripting.</p><h4 id="vm-management" tabindex="-1"><a class="header-anchor" href="#vm-management" aria-hidden="true">#</a> VM Management</h4><ul><li><strong>CreateVM:</strong> Create a new virtual machine.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage createvm <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> <span class="token parameter variable">--ostype</span> <span class="token operator">&lt;</span>ostype<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>StartVM:</strong> Start a virtual machine.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage startvm <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>ControlVM:</strong> Control the state of a virtual machine (pause, resume, reset, poweroff).<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage controlvm <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> pause<span class="token operator">|</span>resume<span class="token operator">|</span>reset<span class="token operator">|</span>poweroff
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>CloneVM:</strong> Clone a VM to create an identical copy.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage clonevm <span class="token operator">&lt;</span>sourcevm<span class="token operator">&gt;</span> <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>newvmname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="snapshot-management" tabindex="-1"><a class="header-anchor" href="#snapshot-management" aria-hidden="true">#</a> Snapshot Management</h4><ul><li><strong>Snapshot:</strong> Take, restore, and manage snapshots of a VM.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage snapshot <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> take <span class="token operator">&lt;</span>snapshotname<span class="token operator">&gt;</span>
VBoxManage snapshot <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> restore <span class="token operator">&lt;</span>snapshotname<span class="token operator">&gt;</span>
VBoxManage snapshot <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> delete <span class="token operator">&lt;</span>snapshotname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="storage" tabindex="-1"><a class="header-anchor" href="#storage" aria-hidden="true">#</a> Storage</h4><ul><li><strong>Storageattach:</strong> Attach storage devices to VMs.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage storageattach <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> <span class="token parameter variable">--storagectl</span> <span class="token operator">&lt;</span>controller<span class="token operator">&gt;</span> <span class="token parameter variable">--port</span> <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span> <span class="token parameter variable">--device</span> <span class="token operator">&lt;</span>device<span class="token operator">&gt;</span> <span class="token parameter variable">--type</span> <span class="token operator">&lt;</span>type<span class="token operator">&gt;</span> <span class="token parameter variable">--medium</span> <span class="token operator">&lt;</span>medium<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Closemedium:</strong> Close a medium (disk image) file.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage closemedium disk <span class="token operator">&lt;</span>filename<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="networking" tabindex="-1"><a class="header-anchor" href="#networking" aria-hidden="true">#</a> Networking</h4><ul><li><strong>Modifyvm:</strong> Configure networking options for a VM.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage modifyvm <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> --nic<span class="token operator">&lt;</span><span class="token number">1</span>-N<span class="token operator">&gt;</span> bridged<span class="token operator">|</span>nat<span class="token operator">|</span>intnet<span class="token operator">|</span>hostonly
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="information" tabindex="-1"><a class="header-anchor" href="#information" aria-hidden="true">#</a> Information</h4><ul><li><strong>List vms:</strong> List available virtual machines.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage list vms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Showvminfo:</strong> Display detailed information about a VM.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage showvminfo <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="miscellaneous" tabindex="-1"><a class="header-anchor" href="#miscellaneous" aria-hidden="true">#</a> Miscellaneous</h4><ul><li><strong>Guestcontrol:</strong> Run commands inside the guest operating system.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage guestcontrol execute <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> <span class="token parameter variable">--username</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">--password</span> <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span> -- <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>Hostinfo:</strong> Display information about the host system.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VBoxManage hostinfo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul>`,47),k={href:"https://www.virtualbox.org/manual/ch08.html",target:"_blank",rel:"noopener noreferrer"},f=t(`<h3 id="vagrant" tabindex="-1"><a class="header-anchor" href="#vagrant" aria-hidden="true">#</a> Vagrant</h3><p>Vagrant is a tool for creating and managing development environments. It simplifies the setup and provisioning of virtual environments by providing a declarative configuration file (Vagrantfile) that defines the VM&#39;s configuration. It&#39;s commonly used in DevOps for consistent development environments across teams.</p><p><strong>Vagrant</strong> is an open-source tool that revolutionizes the way developers create, manage, and share development environments. It automates the setup process by providing a consistent workflow across various operating systems. Using simple configuration files (typically in the form of Vagrantfiles), developers can define the infrastructure and dependencies required for their projects. With Vagrant, spinning up a virtual machine or a containerized environment becomes effortless, ensuring that every team member works in an identical environment, eliminating the infamous &quot;it works on my machine&quot; dilemma. Its seamless integration with popular virtualization providers like VirtualBox, VMware, and container platforms such as Docker and Kubernetes, makes Vagrant a go-to solution for swiftly creating development environments. Developers can launch, provision, and manage these environments with just a few commands, enabling rapid iteration, testing, and debugging. Vagrant streamlines collaboration among teams by allowing them to easily share these preconfigured environments, facilitating smoother onboarding for new team members and ensuring consistent development experiences across the board.</p><h4 id="what-is-a-box" tabindex="-1"><a class="header-anchor" href="#what-is-a-box" aria-hidden="true">#</a> What is a box ?</h4><p>Normally a bare set of software. An example Linux box may contain the following:</p><ul><li>Pre-installed OS</li><li>SSH user so Vagrant can connect</li><li>A provisioner (Chef, Puppet, etc) but not strictly required.</li></ul><p>Each provider may require additional software. E.g. if you&#39;re making a box for VirtualBox, you&#39;ll want to include the VirtualBox guest additions so that shared folders work properly.Software is than provisioned on top of it. Although it does not have to work this way, you could pre install as much as you want</p><h4 id="what-is-a-vagrantfile" tabindex="-1"><a class="header-anchor" href="#what-is-a-vagrantfile" aria-hidden="true">#</a> What is a Vagrantfile ?</h4><p>Ruby based, you can use ruby syntax to assign variables and add some logic if you need it.</p><p>Vagrant reads a Vagrantfile and builds a machine based on a template called a box.</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>Vagrant<span class="token punctuation">.</span>configure<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;2&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>box <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;ubuntu/focal64&quot;</span></span>
  
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>network <span class="token string-literal"><span class="token string">&quot;private_network&quot;</span></span><span class="token punctuation">,</span> <span class="token symbol">type</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">&quot;dhcp&quot;</span></span>

  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provider <span class="token string-literal"><span class="token string">&quot;virtualbox&quot;</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>vb<span class="token operator">|</span>
    vb<span class="token punctuation">.</span>memory <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;1024&quot;</span></span>
    vb<span class="token punctuation">.</span>cpus <span class="token operator">=</span> <span class="token number">2</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Explanation</strong></p><ul><li><code>Vagrant.configure(&quot;2&quot;) do |config|</code> sets up the Vagrant configuration.</li><li><code>config.vm.box = &quot;ubuntu/focal64&quot;</code> specifies the base box to use. In this case, it uses the Ubuntu Focal Fossa (20.04 LTS) 64-bit box from Vagrant Cloud.</li><li><code>config.vm.network &quot;private_network&quot;, type: &quot;dhcp&quot;</code> sets up a private network with DHCP to enable networking for the VM.</li><li><code>config.vm.provider &quot;virtualbox&quot; do |vb|</code> configures settings specific to the VirtualBox provider.</li><li><code>vb.memory = &quot;1024&quot;</code> sets the amount of RAM for the VM to 1024 MB (1GB).</li><li><code>vb.cpus = 2</code> assigns 2 virtual CPUs to the VM.</li></ul><h4 id="initialize-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#initialize-a-vagrant-environment" aria-hidden="true">#</a> <strong>Initialize a Vagrant Environment</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Initializes a new Vagrant environment in the current directory, creating a Vagrantfile.</p><h4 id="start-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#start-a-vagrant-environment" aria-hidden="true">#</a> <strong>Start a Vagrant Environment</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Starts the Vagrant environment based on the configuration defined in the Vagrantfile.</p><h4 id="stop-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#stop-a-vagrant-environment" aria-hidden="true">#</a> <strong>Stop a Vagrant Environment</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant <span class="token function">halt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Stops the running Vagrant environment.</p><h4 id="ssh-into-a-running-vagrant-machine" tabindex="-1"><a class="header-anchor" href="#ssh-into-a-running-vagrant-machine" aria-hidden="true">#</a> <strong>SSH into a Running Vagrant Machine</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Connects to the default SSH session of the running Vagrant machine.</p><h4 id="suspend-and-resume-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#suspend-and-resume-a-vagrant-environment" aria-hidden="true">#</a> <strong>Suspend and Resume a Vagrant Environment</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant <span class="token function">suspend</span>
vagrant resume
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Suspends and resumes a running Vagrant environment to conserve resources.</p><h4 id="box-management" tabindex="-1"><a class="header-anchor" href="#box-management" aria-hidden="true">#</a> <strong>Box Management</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant box <span class="token function">add</span> <span class="token operator">&lt;</span>box_name<span class="token operator">&gt;</span>
vagrant box list
vagrant box remove <span class="token operator">&lt;</span>box_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Manages Vagrant boxes, including adding, listing, and removing them.</p><h4 id="reload-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#reload-vagrant-environment" aria-hidden="true">#</a> <strong>Reload Vagrant Environment</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Reloads the Vagrant environment, applying any changes made to the Vagrantfile.</p><h4 id="provision-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#provision-a-vagrant-environment" aria-hidden="true">#</a> <strong>Provision a Vagrant Environment</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant provision
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Runs provisioning scripts defined in the Vagrantfile on an already running environment.</p><h4 id="destroy-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#destroy-a-vagrant-environment" aria-hidden="true">#</a> <strong>Destroy a Vagrant Environment</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant destroy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Stops and deletes all traces of the Vagrant environment, including the VM and associated resources.</p><h4 id="ssh-configuration-and-info" tabindex="-1"><a class="header-anchor" href="#ssh-configuration-and-info" aria-hidden="true">#</a> <strong>SSH Configuration and Info</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>   vagrant ssh-config
   vagrant port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Displays SSH configuration details and port mappings for the Vagrant environment.</p>`,43),y={href:"http://docs.vagrantup.com/v2/cli/index.html",target:"_blank",rel:"noopener noreferrer"},x=t('<h2 id="hypervisor-type-i" tabindex="-1"><a class="header-anchor" href="#hypervisor-type-i" aria-hidden="true">#</a> Hypervisor Type I</h2><p>Hypervisor Type I, also known as a bare-metal hypervisor, runs directly on the physical hardware without the need for a host operating system. It provides better performance and efficiency by eliminating the overhead of an additional operating system layer. Examples include VMware ESXi and Microsoft Hyper-V.</p><h3 id="what-is-vmware-esxi" tabindex="-1"><a class="header-anchor" href="#what-is-vmware-esxi" aria-hidden="true">#</a> What is VMware ESXi?</h3><p>VMware ESXi is a powerful, bare-metal hypervisor, designed to create and manage virtual machines (VMs) on physical servers. It offers a range of functionalities essential for virtualization and efficient resource management in a data center environment.</p><p><img src="'+g+'" alt="vsphere"></p><p>Key Functionalities:</p><p><strong>1. Virtual Machine Management</strong></p><p>Creation and Configuration: ESXi enables the creation of multiple VMs on a single physical server, allowing different operating systems to run concurrently. Resource Allocation: It facilitates the allocation of CPU, memory, storage, and network resources to each VM, ensuring optimal performance. Snapshots: Users can take snapshots of VMs to capture their current state, facilitating easy backup and rollback.</p><p><strong>2. Resource Pooling and Allocation</strong></p><p>Resource Pools: ESXi allows the creation of resource pools to logically group and manage compute resources, ensuring efficient allocation to VMs based on priorities and requirements. Dynamic Resource Allocation: Through features like Distributed Resource Scheduler (DRS), it dynamically balances resource usage across multiple hosts for optimal performance.</p><p><strong>3. Networking</strong></p><p>Virtual Networking: ESXi offers virtual networking capabilities, allowing users to create and manage virtual switches, VLANs, and network adapters for VMs. Network Isolation: It supports network segmentation to isolate VM traffic for security and performance reasons.</p><p><strong>4. Storage Management</strong></p><p>Datastore Management: ESXi manages datastores, which are storage repositories for VM files, enabling efficient storage provisioning and management. Storage vMotion: This feature allows live migration of VMs between datastores without downtime, ensuring flexibility and load balancing.</p><p><strong>5. High Availability and Fault Tolerance</strong></p><p>High Availability (HA): ESXi&#39;s HA feature ensures VMs remain available in the event of hardware failures by automatically restarting them on alternate hosts. Fault Tolerance (FT): For critical applications, FT maintains a secondary VM that mirrors the primary VM&#39;s operations, providing continuous availability without interruption.</p><p><strong>6. Security and Compliance</strong></p><p>Secure Boot: ESXi supports Secure Boot to ensure that only cryptographically signed components are loaded during boot-up, enhancing system security. Role-Based Access Control (RBAC): Administrators can enforce access controls and assign specific privileges to users or groups, enhancing security and compliance.</p><p><strong>7. Monitoring and Performance Optimization</strong></p><p>Performance Monitoring: ESXi provides tools for monitoring VM performance metrics, enabling administrators to identify bottlenecks and optimize resource usage. vCenter Server Integration: Integration with vCenter Server enhances monitoring capabilities and provides a centralized management platform for multiple ESXi hosts.</p><p><strong>8. Backup and Recovery</strong></p><p>VMware Data Protection (VDP): It offers built-in backup and recovery solutions for VMs, allowing easy restoration in case of data loss or corruption. Conclusion: VMware ESXi serves as a robust virtualization platform, offering a wide array of functionalities essential for modern data center management. Its features encompass VM management, resource optimization, networking, storage, high availability, security, and performance monitoring, making it a fundamental tool for DevOps professionals managing infrastructure at scale.</p><h2 id="exercises" tabindex="-1"><a class="header-anchor" href="#exercises" aria-hidden="true">#</a> Exercises</h2><h3 id="🧪-exercise-1-use-an-hypervisor-type-2" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-1-use-an-hypervisor-type-2" aria-hidden="true">#</a> 🧪 Exercise 1 - Use an hypervisor type 2</h3><p>Install Ubuntu on VirtualBox hypervisor.</p>',25),w={href:"https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox#1-overview",target:"_blank",rel:"noopener noreferrer"},V={class:"custom-container tip"},_=a("p",{class:"custom-container-title"},"For MacOS users",-1),M={href:"https://github.com/utmapp/UTM",target:"_blank",rel:"noopener noreferrer"},q=a("h3",{id:"🧪-exercise-2-virtualization-scripting",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#🧪-exercise-2-virtualization-scripting","aria-hidden":"true"},"#"),n(" 🧪 Exercise 2 - Virtualization scripting")],-1),S=a("p",null,"Generate a linux virtual machine with VBoxManage",-1),I=a("li",null,"Create your bash script",-1),A={href:"http://dl-cdn.alpinelinux.org/alpine/v3.4/releases/x86_64/alpine-3.4.3-x86_64.iso",target:"_blank",rel:"noopener noreferrer"},E=a("li",null,"Create storage medium for VM",-1),C=a("li",null,"List available OS types and choose the right one",-1),B=a("li",null,"Register a new alpine VM",-1),N=a("li",null,"Configure system settings of alpine VM",-1),P=a("li",null,"Configure boot settings of VM (Boot1 CDDrive , Boot2: Disk)",-1),D=a("li",null,"Add a storage controller (IDE) for the DVD iso",-1),$=a("li",null,"Add a storage controller (SATA) for the HDD",-1),T=a("li",null,"Add the storage created at the begining to the VM",-1),z=a("li",null,"Add Alpine ISO to the VM",-1),H=a("div",{class:"custom-container warning"},[a("p",{class:"custom-container-title"},"To rework, don't do it"),a("ul",null,[a("li",null,"Configure for installing Alpine on the storage (VBoxManage unattended)"),a("li",null,"Install Virtualbox Additions"),a("li",null,"Use setup-alpine to configure your VM"),a("li",null,"install ssh"),a("li",null,"install an Apache server"),a("li",null,"Test to reach your website from your Host machine")])],-1),R={class:"custom-container tip"},L=a("p",{class:"custom-container-title"},"For MacOS users",-1),O={href:"https://docs.getutm.app/scripting/scripting/",target:"_blank",rel:"noopener noreferrer"},U=a("code",null,"utmctl",-1),X=t(`<details class="custom-container details"><summary>solution</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># VM settings</span>
<span class="token assign-left variable">VM_NAME</span><span class="token operator">=</span><span class="token string">&quot;AlpineLinux&quot;</span>
<span class="token assign-left variable">VM_MEMORY</span><span class="token operator">=</span><span class="token string">&quot;1024&quot;</span>
<span class="token assign-left variable">VM_CPU</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
<span class="token assign-left variable">VM_DISK_SIZE</span><span class="token operator">=</span><span class="token string">&quot;20000&quot;</span>

<span class="token comment"># Alpine Linux ISO image</span>
<span class="token assign-left variable">ALPINE_ISO</span><span class="token operator">=</span><span class="token string">&quot;/path/to/alpine-linux.iso&quot;</span>

<span class="token function">curl</span> <span class="token parameter variable">-o</span> <span class="token variable">$ALPINE_ISO</span> https://dl-cdn.alpinelinux.org/alpine/v3.15/releases/x86_64/alpine-standard-3.15.0-x86_64.iso

<span class="token comment"># Create VM</span>
VBoxManage createvm <span class="token parameter variable">--name</span> <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--ostype</span> <span class="token string">&quot;Linux26_64&quot;</span> <span class="token parameter variable">--register</span>

<span class="token comment"># Configure VM settings</span>
VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--memory</span> <span class="token string">&quot;<span class="token variable">$VM_MEMORY</span>&quot;</span> <span class="token parameter variable">--cpus</span> <span class="token string">&quot;<span class="token variable">$VM_CPU</span>&quot;</span> <span class="token parameter variable">--audio</span> none
VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--nic1</span> nat

<span class="token comment"># Create and attach virtual disk</span>
VBoxManage createhd <span class="token parameter variable">--filename</span> <span class="token string">&quot;<span class="token variable">$VM_NAME</span>.vdi&quot;</span> <span class="token parameter variable">--size</span> <span class="token string">&quot;<span class="token variable">$VM_DISK_SIZE</span>&quot;</span>
VBoxManage storagectl <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--name</span> <span class="token string">&quot;SATA Controller&quot;</span> <span class="token parameter variable">--add</span> sata <span class="token parameter variable">--controller</span> IntelAhci
VBoxManage storageattach <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--storagectl</span> <span class="token string">&quot;SATA Controller&quot;</span> <span class="token parameter variable">--port</span> <span class="token number">0</span> <span class="token parameter variable">--device</span> <span class="token number">0</span> <span class="token parameter variable">--type</span> hdd <span class="token parameter variable">--medium</span> <span class="token string">&quot;<span class="token variable">$VM_NAME</span>.vdi&quot;</span>

<span class="token comment"># Attach Alpine Linux ISO</span>
VBoxManage storagectl <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--name</span> <span class="token string">&quot;IDE Controller&quot;</span> <span class="token parameter variable">--add</span> ide <span class="token parameter variable">--controller</span> PIIX4
VBoxManage storageattach <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--storagectl</span> <span class="token string">&quot;IDE Controller&quot;</span> <span class="token parameter variable">--port</span> <span class="token number">1</span> <span class="token parameter variable">--device</span> <span class="token number">0</span> <span class="token parameter variable">--type</span> dvddrive <span class="token parameter variable">--medium</span> <span class="token string">&quot;<span class="token variable">$ALPINE_ISO</span>&quot;</span>

<span class="token comment"># Start VM</span>
VBoxManage startvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--type</span> headless

<span class="token comment"># Wait for VM to boot</span>
<span class="token function">sleep</span> <span class="token number">30</span>

<span class="token comment"># Install VirtualBox Guest Additions</span>
VBoxManage guestcontrol <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--username</span> root <span class="token parameter variable">--password</span> password123 <span class="token parameter variable">--execute</span> <span class="token string">&quot;/sbin/apk add virtualbox-guest-additions virtualbox-guest-modules-virt&quot;</span> --wait-stdout

<span class="token comment"># Install SSH</span>
VBoxManage guestcontrol <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--username</span> root <span class="token parameter variable">--password</span> password123 <span class="token parameter variable">--execute</span> <span class="token string">&quot;/sbin/apk add openssh&quot;</span> --wait-stdout

<span class="token comment"># Shutdown VM</span>
VBoxManage controlvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> poweroff

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="🧪-exercice-3-discover-hypervisor-type-1" tabindex="-1"><a class="header-anchor" href="#🧪-exercice-3-discover-hypervisor-type-1" aria-hidden="true">#</a> 🧪 Exercice 3 - Discover hypervisor type 1</h3>`,2),W={href:"https://www.altaro.com/vmware/esxi-free/",target:"_blank",rel:"noopener noreferrer"},G=t(`<div class="custom-container tip"><p class="custom-container-title">going further</p><ul><li>Create a powershell script to create a simple VM on the ESXi node</li></ul><details class="custom-container details"><summary>solution</summary><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Install-Module</span> <span class="token operator">-</span>Name VMware<span class="token punctuation">.</span>PowerCLI <span class="token operator">-</span>Scope CurrentUser
<span class="token function">Import-Module</span> VMware<span class="token punctuation">.</span>PowerCLI
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment"># Connect to your vCenter or ESXi host</span>
<span class="token variable">$vcServer</span> = <span class="token string">&quot;your_vc_server_or_esxi_host&quot;</span>
<span class="token variable">$vcUser</span> = <span class="token string">&quot;your_username&quot;</span>
<span class="token variable">$vcPassword</span> = <span class="token string">&quot;your_password&quot;</span>

<span class="token function">Connect-VIServer</span> <span class="token operator">-</span>Server <span class="token variable">$vcServer</span> <span class="token operator">-</span>User <span class="token variable">$vcUser</span> <span class="token operator">-</span>Password <span class="token variable">$vcPassword</span>

<span class="token comment"># Define VM parameters</span>
<span class="token variable">$vmName</span> = <span class="token string">&quot;AlpineLinuxVM&quot;</span>
<span class="token variable">$datacenterName</span> = <span class="token string">&quot;your_datacenter&quot;</span>
<span class="token variable">$clusterName</span> = <span class="token string">&quot;your_cluster&quot;</span>
<span class="token variable">$datastoreName</span> = <span class="token string">&quot;your_datastore&quot;</span>
<span class="token variable">$networkName</span> = <span class="token string">&quot;your_network&quot;</span>
<span class="token variable">$vmMemoryMB</span> = 1024
<span class="token variable">$vmNumCPUs</span> = 1

<span class="token comment"># Create VM</span>
<span class="token function">New-VM</span> <span class="token operator">-</span>Name <span class="token variable">$vmName</span> <span class="token operator">-</span>MemoryMB <span class="token variable">$vmMemoryMB</span> <span class="token operator">-</span>NumCPU <span class="token variable">$vmNumCPUs</span> <span class="token operator">-</span>Datastore <span class="token variable">$datastoreName</span> <span class="token operator">-</span>NetworkName <span class="token variable">$networkName</span> <span class="token operator">-</span>Location <span class="token punctuation">(</span><span class="token function">Get-Cluster</span> <span class="token variable">$clusterName</span> <span class="token punctuation">|</span> <span class="token function">Get-Datacenter</span> <span class="token variable">$datacenterName</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name

<span class="token comment"># Start VM</span>
<span class="token function">Start-VM</span> <span class="token operator">-</span>VM <span class="token variable">$vmName</span>

<span class="token comment"># Install VMware Tools (optional)</span>
<span class="token comment"># Get-VM -Name $vmName | Install-VMTools -RunAsync</span>

<span class="token comment"># Disconnect from vCenter or ESXi host</span>
<span class="token function">Disconnect-VIServer</span> <span class="token operator">-</span>Server <span class="token variable">$vcServer</span> <span class="token operator">-</span>Confirm:<span class="token boolean">$false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></div><p>:::</p><h3 id="🧪-exercice-4-vagrant-usage" tabindex="-1"><a class="header-anchor" href="#🧪-exercice-4-vagrant-usage" aria-hidden="true">#</a> 🧪 Exercice 4 - Vagrant usage</h3><p>Generate the same AlpineLinux VM HTTPD server with Vagrant</p><ul><li>Go to https://app.vagrantup.com/boxes/search and fin the AlpineLinux box</li><li>And use vagrant command to start it</li></ul><p>We should get an output such as:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant.exe up
Bringing machine <span class="token string">&#39;alpine_vm&#39;</span> up with <span class="token string">&#39;virtualbox&#39;</span> provider<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Importing base box <span class="token string">&#39;generic/alpine319&#39;</span><span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Matching MAC address <span class="token keyword">for</span> NAT networking<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Checking <span class="token keyword">if</span> box <span class="token string">&#39;generic/alpine319&#39;</span> version <span class="token string">&#39;4.3.12&#39;</span> is up to date<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Setting the name of the VM: virtualization_alpine_vm_1718704299141_15386
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Clearing any previously <span class="token builtin class-name">set</span> network interfaces<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Preparing network interfaces based on configuration<span class="token punctuation">..</span>.
    alpine_vm: Adapter <span class="token number">1</span>: nat
    alpine_vm: Adapter <span class="token number">2</span>: bridged
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Forwarding ports<span class="token punctuation">..</span>.
    alpine_vm: <span class="token number">22</span> <span class="token punctuation">(</span>guest<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">2222</span> <span class="token punctuation">(</span>host<span class="token punctuation">)</span> <span class="token punctuation">(</span>adapter <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Running <span class="token string">&#39;pre-boot&#39;</span> VM customizations<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Booting VM<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Waiting <span class="token keyword">for</span> machine to boot. This may take a few minutes<span class="token punctuation">..</span>.
    alpine_vm: SSH address: <span class="token number">127.0</span>.0.1:2222
    alpine_vm: SSH username: vagrant
    alpine_vm: SSH auth method: private key
    alpine_vm:
    alpine_vm: Vagrant insecure key detected. Vagrant will automatically replace
    alpine_vm: this with a newly generated keypair <span class="token keyword">for</span> better security.
    alpine_vm:
    alpine_vm: Inserting generated public key within guest<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Machine booted and ready<span class="token operator">!</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Checking <span class="token keyword">for</span> guest additions <span class="token keyword">in</span> VM<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Configuring and enabling network interfaces<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Running provisioner: shell<span class="token punctuation">..</span>.
    alpine_vm: Running: inline script
    alpine_vm: fetch https://mirrors.edge.kernel.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz
    alpine_vm: fetch https://mirrors.edge.kernel.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz
    alpine_vm: v3.18.6-263-g77db018514d <span class="token punctuation">[</span>https://mirrors.edge.kernel.org/alpine/v3.18/main<span class="token punctuation">]</span>
    alpine_vm: v3.18.6-263-g77db018514d <span class="token punctuation">[</span>https://mirrors.edge.kernel.org/alpine/v3.18/community<span class="token punctuation">]</span>
    alpine_vm: OK: <span class="token number">20135</span> distinct packages available
    alpine_vm: fetch https://mirrors.edge.kernel.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz
    alpine_vm: fetch https://mirrors.edge.kernel.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz
    alpine_vm: <span class="token punctuation">(</span><span class="token number">1</span>/4<span class="token punctuation">)</span> Installing apr <span class="token punctuation">(</span><span class="token number">1.7</span>.4-r0<span class="token punctuation">)</span>
    alpine_vm: <span class="token punctuation">(</span><span class="token number">2</span>/4<span class="token punctuation">)</span> Installing libexpat <span class="token punctuation">(</span><span class="token number">2.6</span>.2-r0<span class="token punctuation">)</span>
    alpine_vm: <span class="token punctuation">(</span><span class="token number">3</span>/4<span class="token punctuation">)</span> Installing apr-util <span class="token punctuation">(</span><span class="token number">1.6</span>.3-r1<span class="token punctuation">)</span>
    alpine_vm: <span class="token punctuation">(</span><span class="token number">4</span>/4<span class="token punctuation">)</span> Installing apache2 <span class="token punctuation">(</span><span class="token number">2.4</span>.59-r0<span class="token punctuation">)</span>
    alpine_vm: Executing apache2-2.4.59-r0.pre-install
    alpine_vm: Executing busybox-1.36.1-r15.trigger
    alpine_vm: OK: <span class="token number">153</span> MiB <span class="token keyword">in</span> <span class="token number">121</span> packages
    alpine_vm:  * Caching <span class="token function">service</span> dependencies <span class="token punctuation">..</span>. <span class="token punctuation">[</span> ok <span class="token punctuation">]</span>
    alpine_vm:  * Starting apache2 <span class="token punctuation">..</span>. <span class="token punctuation">[</span> ok <span class="token punctuation">]</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Running action triggers after up <span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Running trigger: Show IP Address<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">&gt;</span> alpine_vm: Getting the IP address of the VM<span class="token punctuation">..</span>.
    alpine_vm: Running: inline script
    alpine_vm: <span class="token number">192.168</span>.1.24
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The last line should be the IP address of the VM. We can then test the HTTPD server by going to the IP address in a browser or on the command line:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> http://192.168.1.24
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>It works<span class="token operator">!</span><span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>solution</summary><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code><span class="token comment"># Vagrantfile for configuring a virtual machine with Apache server</span>
Vagrant<span class="token punctuation">.</span>configure<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;2&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>
  <span class="token comment"># Define a virtual machine named &quot;alpine_vm&quot;</span>
  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>define <span class="token string-literal"><span class="token string">&quot;alpine_vm&quot;</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>vm<span class="token operator">|</span>
    <span class="token comment"># Use the &quot;generic/alpine319&quot; box for the virtual machine</span>
    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>box <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;generic/alpine319&quot;</span></span>
    <span class="token comment"># Configure the virtual machine to use a public network</span>
    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>network <span class="token string-literal"><span class="token string">&quot;public_network&quot;</span></span>
    <span class="token comment"># Configure the provider for the virtual machine</span>
    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provider <span class="token string-literal"><span class="token string">&quot;virtualbox&quot;</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>vb<span class="token operator">|</span>
      <span class="token comment"># Set the memory for the virtual machine to 1024 MB</span>
      vb<span class="token punctuation">.</span>memory <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;1024&quot;</span></span>
      <span class="token comment"># Set the number of CPUs for the virtual machine to 1</span>
      vb<span class="token punctuation">.</span>cpus <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">end</span>

    <span class="token comment"># Provisioning</span>
    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provision <span class="token string-literal"><span class="token string">&quot;shell&quot;</span></span><span class="token punctuation">,</span> <span class="token symbol">inline</span><span class="token operator">:</span> <span class="token string-literal heredoc-string"><span class="token delimiter"><span class="token punctuation">&lt;&lt;-</span><span class="token symbol">SHELL</span></span><span class="token string">
      # Update the package list
      apk update
      # Install Apache server
      apk add --no-cache apache2
      # Configure Apache to listen on all IP addresses
      sed -i &#39;s/^Listen .*/Listen 0.0.0.0:80/&#39; /etc/apache2/httpd.conf
      # Restart Apache to apply the changes
      rc-service apache2 restart
    </span><span class="token delimiter"><span class="token symbol">SHELL</span></span></span>

    <span class="token comment"># Trigger to print the IP address after the machine is up</span>
    vm<span class="token punctuation">.</span>trigger<span class="token punctuation">.</span>after <span class="token symbol">:up</span> <span class="token keyword">do</span> <span class="token operator">|</span>trigger<span class="token operator">|</span>
      <span class="token comment"># Name the trigger as &quot;Show IP Address&quot;</span>
      trigger<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Show IP Address&quot;</span></span>
      <span class="token comment"># Display information about the trigger</span>
      trigger<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Getting the IP address of the VM...&quot;</span></span>
      <span class="token comment"># Run a command on the virtual machine to get and print the IP address</span>
      trigger<span class="token punctuation">.</span>run_remote <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token symbol">inline</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">&quot;ip addr show eth1 | grep &#39;inet &#39; | awk &#39;{ print $2}&#39; | cut -f1 -d&#39;/&#39;&quot;</span></span><span class="token punctuation">}</span>
    <span class="token keyword">end</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,10);function F(K,Y){const s=p("ExternalLinkIcon");return c(),d("div",null,[b,a("p",null,[n("You can read the full documentation "),a("a",k,[n("here"),e(s)])]),f,a("p",null,[n("You can find more command informations "),a("a",y,[n("here"),e(s)])]),x,a("ul",null,[a("li",null,[a("a",w,[n("https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox#1-overview"),e(s)])])]),a("div",V,[_,a("p",null,[n("please use instead of VirtualBox , "),a("a",M,[n("UTM hypervisor (macOS version)"),e(s)])])]),q,S,a("ul",null,[I,a("li",null,[n("Download alpine iso : "),a("a",A,[n("http://dl-cdn.alpinelinux.org/alpine/v3.4/releases/x86_64/alpine-3.4.3-x86_64.iso"),e(s)])]),E,C,B,N,P,D,$,T,z]),H,a("div",R,[L,a("p",null,[n("please use instead of VBoxManage , "),a("a",O,[U,e(s)])])]),X,a("ul",null,[a("li",null,[n("Install and test an hypervisor type II with VMWare ESXi "),a("a",W,[n("Licensing and installation tutorial"),e(s)])])]),G])}const J=l(h,[["render",F],["__file","index.html.vue"]]);export{J as default};
