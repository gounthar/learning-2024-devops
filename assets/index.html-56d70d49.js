import{_ as t,M as o,p as r,q as l,R as e,t as s,N as a,a1 as i}from"./framework-96b046e1.js";const c="/learning-2024-devops/assets/git-bac665fb.png",d="/learning-2024-devops/assets/onpremise-999cb797.png",p={},u=i(`<h1 id="shell-for-devops" tabindex="-1"><a class="header-anchor" href="#shell-for-devops" aria-hidden="true">#</a> Shell for DevOps</h1><h2 id="linux-filesystem" tabindex="-1"><a class="header-anchor" href="#linux-filesystem" aria-hidden="true">#</a> Linux Filesystem</h2><p>In a Linux distribution, several critical directories hold essential system files, configurations, and user data. Among these, <code>/etc</code>, <code>/var</code>, <code>/bin</code>, <code>/usr</code>, and <code>/home</code> are some of the most important directories.</p><p><code>/etc</code>: This directory contains system-wide configuration files. It houses crucial settings for various services, software applications, and the system itself. Files such as <code>/etc/passwd</code> (user account information), <code>/etc/apt/sources.list</code> (APT package manager configuration), and <code>/etc/hostname</code> (system hostname) reside here. Administrators often tweak settings in this directory to manage system behavior and software configurations.</p><p><code>/var</code>: This directory stores variable data generated by running processes. It includes files that change frequently during system operation, such as logs (<code>/var/log</code>), databases (<code>/var/lib</code>), mail (<code>/var/mail</code>), and temporary files (<code>/var/tmp</code>). System logs and application data often reside here, offering insights into system health and performance.</p><p><code>/bin</code> and <code>/usr</code>: These directories contain executable binaries and essential system commands. <code>/bin</code> holds fundamental commands crucial for system booting and repair, while <code>/usr/bin</code> contains standard user commands and binaries for installed software.</p><p><code>/home</code>: This directory houses user home directories. Each user typically has a dedicated subdirectory (<code>/home/username</code>) storing their personal files, configurations, and settings. It&#39;s a critical space for user-specific data, allowing customization and privacy for individual users.</p><p>These directories form the backbone of a Linux system, encompassing critical configurations, system data, executable files, and user-specific information essential for the system&#39;s functionality and user experience.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>├── bin                         <span class="token comment"># Essential system binaries.</span>
│   ├── /bin                    <span class="token comment"># Core command binaries.</span>
│   ├── /sbin                   <span class="token comment"># System binaries for administration tasks.</span>
│   └── /usr                    <span class="token comment"># Additional user binaries.</span>
│       └── /usr/bin            <span class="token comment"># User command binaries.</span>
├── boot                        <span class="token comment"># Boot-related files.</span>
│   ├── /boot/grub              <span class="token comment"># GRUB bootloader files and config.</span>
│   └── /boot/kernel            <span class="token comment"># Kernel and related files.</span>
├── dev                         <span class="token comment"># Device files representing hardware devices.</span>
│   ├── /dev/pts                <span class="token comment"># Pseudo-terminal devices.</span>
│   └── /dev/shm                <span class="token comment"># Shared memory files and objects.</span>
├── etc                         <span class="token comment"># System-wide configuration files.</span>
│   ├── /etc/network            <span class="token comment"># Network configuration files.</span>
│   ├── /etc/apt                <span class="token comment"># APT package manager configuration.</span>
│   └── /etc/default            <span class="token comment"># Default config for various applications.</span>
├── home                        <span class="token comment"># User home directories.</span>
│   ├── /home/user1             <span class="token comment"># Individual user directories.</span>
│   └── /home/user2
├── lib                         <span class="token comment"># Essential shared libraries.</span>
├── media                       <span class="token comment"># Mount point for removable media.</span>
├── mnt                         <span class="token comment"># Temporary mount point for additional filesystems.</span>
├── opt                         <span class="token comment"># Optional third-party software.</span>
├── proc                        <span class="token comment"># Virtual filesystem providing process-related info.</span>
├── root                        <span class="token comment"># Home directory for the root user.</span>
├── run                         <span class="token comment"># System information since the last boot.</span>
│   └── /run/user               <span class="token comment"># User-specific runtime info.</span>
├── sbin                        <span class="token comment"># System binaries for administration tasks.</span>
├── srv                         <span class="token comment"># Site-specific data served by the system.</span>
├── sys                         <span class="token comment"># Virtual filesystem with hardware device info.</span>
├── tmp                         <span class="token comment"># Temporary files, deleted upon reboot.</span>
├── usr                         <span class="token comment"># User-related programs and resources.</span>
│   ├── /usr/local              <span class="token comment"># Locally installed software.</span>
│   └── /usr/share              <span class="token comment"># Architecture-independent data.</span>
└── var                         <span class="token comment"># Variable data, logs, caches, temporary files.</span>
    ├── /var/log                <span class="token comment"># System log files.</span>
    └── /var/cache              <span class="token comment"># Cached data from installed packages.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can displays the directory structure in a tree-like format.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tree
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="permissions" tabindex="-1"><a class="header-anchor" href="#permissions" aria-hidden="true">#</a> Permissions</h2><p>In Linux distributions, file permissions and ownership are managed through a robust system known as &quot;rights management.&quot; This system controls access to files and directories, ensuring security and privacy across the system. Each file and directory has associated permissions determining who can read, write, or execute them. These permissions are categorized for three types of users: the file owner, the user group associated with the file, and others.</p><h4 id="read-file-permisions" tabindex="-1"><a class="header-anchor" href="#read-file-permisions" aria-hidden="true">#</a> Read file permisions</h4><p>When you use <code>ls -l</code> in a terminal, you&#39;ll see an output similar to this:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-rwxr-xr-- <span class="token number">1</span> user group <span class="token number">4096</span> Jan <span class="token number">1</span> <span class="token number">12</span>:00 example.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Let&#39;s break down what each part of this output signifies:</p><ul><li><p><strong>File Permissions:</strong> The <code>-rwxr-xr--</code> part represents permissions for the file.</p><ul><li>The first character indicates file type (<code>-</code> for a regular file).</li><li>The next nine characters (<code>rwxr-xr--</code>) denote permissions for owner, group, and others. <ul><li>The first three characters represent owner permissions (<code>rwx</code>).</li><li>The next three represent group permissions (<code>r-x</code>).</li><li>The last three represent permissions for others (<code>r--</code>).</li></ul></li></ul></li><li><p><strong>File Owner and Group:</strong> The <code>user</code> is the file&#39;s owner, and <code>group</code> is the group associated with the file.</p></li><li><p><strong>File Size, Date, and Name:</strong> The <code>4096 Jan 1 12:00 example.txt</code> part shows the file size, modification date, and file name.</p></li><li><p><code>r</code> denotes read permission.</p></li><li><p><code>w</code> denotes write permission.</p></li><li><p><code>x</code> denotes execute permission.</p></li><li><p><code>-</code> denotes lack of a specific permission.</p></li></ul><p>For instance, in <code>-rwxr-xr--</code>:</p><ul><li>The owner (<code>rwx</code>) has read, write, and execute permissions.</li><li>The group (<code>r-x</code>) has read and execute permissions.</li><li>Others (<code>r--</code>) have only read permission.</li></ul><p>This visual representation from <code>ls -l</code> allows you to quickly interpret file permissions and understand who has access to read, write, and execute the file.</p><h4 id="changing-permissions" tabindex="-1"><a class="header-anchor" href="#changing-permissions" aria-hidden="true">#</a> Changing Permissions</h4><p>Permissions are modified using commands like <code>chmod</code>. For example, granting read and write permissions to the owner and group of a file named <code>example.txt</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> ug+rw example.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="ownership-management" tabindex="-1"><a class="header-anchor" href="#ownership-management" aria-hidden="true">#</a> Ownership Management</h4><p>Ownership is altered using <code>chown</code>. To change the owner of <code>example.txt</code> to <code>newowner</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chown</span> newowner example.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># Changing permissions</span>
<span class="token function">chmod</span> ug+rw example.txt

<span class="token comment"># Changing ownership</span>
<span class="token function">chown</span> newowner example.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This script demonstrates using <code>chmod</code> and <code>chown</code> to modify file permissions and ownership, ensuring proper management and security within a Linux environment.</p><h4 id="octal-notation" tabindex="-1"><a class="header-anchor" href="#octal-notation" aria-hidden="true">#</a> Octal notation</h4><p>Octal notation simplifies permission settings using three digits, each representing permission types for owner, group, and others.</p><p>For instance:</p><ul><li><code>chmod 755 file.txt</code> sets: <ul><li>Owner: Read (4) + Write (2) + Execute (1) = 7</li><li>Group and Others: Read (4) + Execute (1) = 5</li></ul></li></ul><p>This notation streamlines permission management, facilitating precise access control in Linux.</p><h2 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation" aria-hidden="true">#</a> Navigation</h2><h4 id="cd" tabindex="-1"><a class="header-anchor" href="#cd" aria-hidden="true">#</a> <code>cd</code></h4><p>Change directory.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /path/to/directory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="ls" tabindex="-1"><a class="header-anchor" href="#ls" aria-hidden="true">#</a> <code>ls</code></h4><p>List directory contents.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>user@host:/$ <span class="token function">ls</span> /path/to/directory
bin  boot  dev  etc  home  initrd.img  initrd.img.old  lib  lib32  lib64  libx32  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  vmlinuz  vmlinuz.old
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-l</code>: Long format, displaying detailed information.</li></ul><h4 id="pwd" tabindex="-1"><a class="header-anchor" href="#pwd" aria-hidden="true">#</a> <code>pwd</code></h4><p>Print working directory.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> /etc
$ <span class="token builtin class-name">pwd</span>
/etc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="which" tabindex="-1"><a class="header-anchor" href="#which" aria-hidden="true">#</a> <code>which</code></h4><p>Locates an executable file in your shell’s search path.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>usaer@host:~$ <span class="token function">which</span> <span class="token function">java</span>
/usr/bin/java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="package-managers" tabindex="-1"><a class="header-anchor" href="#package-managers" aria-hidden="true">#</a> Package Managers</h2><h4 id="apt" tabindex="-1"><a class="header-anchor" href="#apt" aria-hidden="true">#</a> <code>apt</code></h4><p>Package manager for Debian-based systems.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>update</code>: Updates the package index.</li></ul><p><strong>Config Files:</strong></p><ul><li><code>/etc/apt/sources.list</code>: Contains a list of repository URLs used by <code>apt</code>.</li><li><code>/etc/apt/sources.list.d/</code>: Additional sources for <code>apt</code>.</li></ul><p><strong>Removing Packages:</strong></p><ul><li><code>apt remove package_name</code>: Removes a package.</li><li><code>apt purge package_name</code>: Removes a package along with its configuration files.</li></ul><h4 id="yum" tabindex="-1"><a class="header-anchor" href="#yum" aria-hidden="true">#</a> <code>yum</code></h4><p>Package manager for RPM-based systems like CentOS.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> package_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Config Files:</strong></p><ul><li><code>/etc/yum.conf</code>: Main configuration file for <code>yum</code>.</li><li><code>/etc/yum.repos.d/</code>: Directory containing repository configuration files.</li></ul><p><strong>Removing Packages:</strong></p><ul><li><code>yum remove package_name</code>: Removes a package.</li></ul><h4 id="dnf" tabindex="-1"><a class="header-anchor" href="#dnf" aria-hidden="true">#</a> <code>dnf</code></h4><p>Package manager, newer version of <code>yum</code>, used in Fedora.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dnf search keyword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Config Files:</strong></p><ul><li><code>/etc/dnf/dnf.conf</code>: Main configuration file for <code>dnf</code>.</li><li><code>/etc/yum.repos.d/</code>: Directory containing repository configuration files.</li></ul><p><strong>Removing Packages:</strong></p><ul><li><code>dnf remove package_name</code>: Removes a package.</li></ul><h4 id="pacman" tabindex="-1"><a class="header-anchor" href="#pacman" aria-hidden="true">#</a> <code>pacman</code></h4><p>Package manager for Arch Linux.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pacman <span class="token parameter variable">-Syu</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-Syu</code>: Synchronizes package databases and upgrades installed packages.</li></ul><p><strong>Config Files:</strong></p><ul><li><code>/etc/pacman.conf</code>: Main configuration file for <code>pacman</code>.</li><li><code>/etc/pacman.d/</code>: Directory containing repository configuration files.</li></ul><p><strong>Removing Packages:</strong></p><ul><li><code>pacman -R package_name</code>: Removes a package.</li></ul><h2 id="shell-scripting" tabindex="-1"><a class="header-anchor" href="#shell-scripting" aria-hidden="true">#</a> Shell Scripting</h2><ul><li>Create a <code>.sh</code>file</li><li>add the following header inside it</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># Put your command to execute HERE</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;HelloWorld !&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Add the right of execution to the file</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +x myscript.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>You can now execute the script</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./myscript.sh
HelloWorld <span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="passing-argument-to-a-bash-shell-script" tabindex="-1"><a class="header-anchor" href="#passing-argument-to-a-bash-shell-script" aria-hidden="true">#</a> Passing argument to a bash shell script</h4><p><em>count_line.sh</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">nlines</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">wc</span> <span class="token parameter variable">-l</span> <span class="token operator">&lt;</span> $1<span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;There are <span class="token variable">$nlines</span> lines in <span class="token variable">$1</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./count_lines.sh    /etc/group
There are <span class="token number">73</span> lines <span class="token keyword">in</span> /etc/group
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="processes-services" tabindex="-1"><a class="header-anchor" href="#processes-services" aria-hidden="true">#</a> Processes &amp; Services</h2><h4 id="ps" tabindex="-1"><a class="header-anchor" href="#ps" aria-hidden="true">#</a> <code>ps</code></h4><p>Display information about running processes.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> aux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>aux</code>: Display all processes with a user-oriented format.</li></ul><p>When you run the <code>ps</code> command in Unix-like operating systems, it displays information about active processes. Among the various columns of information, you might see a column labeled <code>PD</code>. This column represents the &quot;Parent Process ID&quot; or &quot;PPID&quot;.</p><p>The Parent Process ID refers to the Process ID (PID) of the parent process that spawned the current process. In other words, it indicates which process is the parent of the process listed in the current row.</p><p>For example, if you see a <code>pd</code> value of <code>1234</code>, it means that the process listed in that row was created by the process with PID <code>1234</code>.</p><p>Understanding the parent-child relationship between processes can be crucial for troubleshooting and analyzing system behavior. It helps in determining how processes are related and how they interact with each other.</p><p>Here&#39;s an example of the output of the <code>ps</code> command with the <code>pd</code> column:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  PID   PPID  CMD
  1001  999   bash
  1002  1001  └─── ls
  1003  1001  └─── ps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Process with PID <code>1001</code> (bash) is the parent process of processes with PIDs <code>1002</code> (ls) and <code>1003</code> (ps). Processes <code>ls</code> and <code>ps</code> were spawned by the <code>bash</code> process.</p><h4 id="top-or-htop" tabindex="-1"><a class="header-anchor" href="#top-or-htop" aria-hidden="true">#</a> <code>top</code> or <code>htop</code></h4><p>Monitoring tools to view system processes and resource usage.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">top</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>Shift + M</code>: Sort by memory usage in <code>top</code>.</li><li><code>F6</code> (in <code>htop</code>): Sort by various fields.</li></ul><h4 id="chrono-table-cron-or-crontab" tabindex="-1"><a class="header-anchor" href="#chrono-table-cron-or-crontab" aria-hidden="true">#</a> Chrono table (Cron or CronTab)</h4><p>Cron is a task scheduling utility for Unix and Unix-like systems. It allows users to schedule commands or scripts to run periodically at specified intervals.</p><p>To edit the cron configuration file:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-plaintext line-numbers-mode" data-ext="plaintext"><pre class="language-plaintext"><code>* * * * * command_to_execute
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The general syntax for configuring a task in a cron tab is as follows, where the five asterisks (*) represent respectively: - Minute (0-59) - Hour (0-23) - Day of the month (1-31) - Month (1-12) - Day of the week (0-7, 0 and 7 represent Sunday)</p><p>You can verify that the task has been added correctly using the <code>crontab -l</code> command.</p><h4 id="systemd" tabindex="-1"><a class="header-anchor" href="#systemd" aria-hidden="true">#</a> SystemD</h4>`,117),m={class:"custom-container tip"},v=e("p",{class:"custom-container-title"},"for MacOS",-1),h={href:"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html",target:"_blank",rel:"noopener noreferrer"},b=i(`<p>Systemd is a service and process management system for Linux systems. It offers advanced features such as parallel startup, dependency management, service monitoring, and more.</p><p>Configuring a service with systemd involves creating a <code>.service</code> file that specifies the service&#39;s settings. Here&#39;s an example of a basic service file:</p><div class="language-plaintext line-numbers-mode" data-ext="plaintext"><pre class="language-plaintext"><code>[Unit]
Description=Service Description

[Service]
Type=Service Type
ExecStart=/path/to/command_to_execute
Restart=Restart Policy

[Install]
WantedBy=default.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>[Unit]</code>: Section containing metadata about the service.</li><li><code>[Service]</code>: Section describing the service itself.</li><li><code>[Install]</code>: Section specifying how the service should be installed.</li></ul><p>To refresh the list of systemd services:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To Start your service:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start mon_service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To Check the status of your service:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status mon_service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Console Output:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>● mon_service.service - My demonstration <span class="token function">service</span>
   Loaded: loaded <span class="token punctuation">(</span>/etc/systemd/system/mon_service.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>
   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Sat <span class="token number">2024</span>-02-14 <span class="token number">10</span>:00:00 CET<span class="token punctuation">;</span> 5s ago
 Main PID: <span class="token number">12345</span> <span class="token punctuation">(</span>mon_script.sh<span class="token punctuation">)</span>
    Tasks: <span class="token number">1</span> <span class="token punctuation">(</span>limit: <span class="token number">4915</span><span class="token punctuation">)</span>
   Memory: <span class="token number">10</span>.0M
   CGroup: /system.slice/mon_service.service
           └─12345 /path/to/mon_script.sh

Feb <span class="token number">14</span> <span class="token number">10</span>:00:00 <span class="token function">hostname</span> systemd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Started My demonstration service.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also configure a Timer associated with your service:</p><ol><li>Create a timer file named <code>mon_service.timer</code> in the directory <code>/etc/systemd/system/</code>:</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /etc/systemd/system/mon_service.timer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Add the following content to the file:</li></ol><div class="language-plaintext line-numbers-mode" data-ext="plaintext"><pre class="language-plaintext"><code>[Unit]
Description=My timer for mon_service

[Timer]
OnCalendar=*-*-* 00:00:00
Unit=mon_service.service

[Install]
WantedBy=timers.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, <code>OnCalendar=*-*-* 00:00:00</code> means the timer will trigger every day at midnight.</p><p>To start your timer:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> mon_service.timer
<span class="token function">sudo</span> systemctl start mon_service.timer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To check the status of your timer:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status mon_service.timer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="network-debugging" tabindex="-1"><a class="header-anchor" href="#network-debugging" aria-hidden="true">#</a> Network Debugging</h2><h4 id="ping" tabindex="-1"><a class="header-anchor" href="#ping" aria-hidden="true">#</a> <code>ping</code></h4><p>Test connectivity to a remote host.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> google.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh" aria-hidden="true">#</a> <code>ssh</code></h4><p>Securely connect to a remote server.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> username@hostname
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="telnet" tabindex="-1"><a class="header-anchor" href="#telnet" aria-hidden="true">#</a> <code>telnet</code></h4><p>Communicate with another host using the Telnet protocol (less secure).</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>telnet example.com <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="netstat" tabindex="-1"><a class="header-anchor" href="#netstat" aria-hidden="true">#</a> <code>netstat</code></h4><p>The <code>netstat</code> command is a network utility tool used to display network connections, routing tables, interface statistics. It provides information about network connections and routing tables, which can be useful for troubleshooting network-related issues.</p><p>Display all TCP and UDP connections:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Display TCP connections with numerical addresses:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">-n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Display routing table:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-r</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Display listening TCP sockets:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-t</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="wget" tabindex="-1"><a class="header-anchor" href="#wget" aria-hidden="true">#</a> <code>wget</code></h4><p>Retrieve content from web servers via HTTP, HTTPS, FTP.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://example.com/file.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="ip" tabindex="-1"><a class="header-anchor" href="#ip" aria-hidden="true">#</a> <code>ip</code></h4><p>The <code>ip</code> command is used for showing/manipulating routing, network devices, interfaces, and tunnels in Unix-like operating systems.</p><p>To display network interfaces and their addresses, use the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ip</span> address show
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Output:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
   inet 127.0.0.1/8 scope host lo
      valid_lft forever preferred_lft forever
   inet6 ::1/128 scope host
      valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000
   inet 192.168.1.100/24 brd 192.168.1.255 scope global eth0
      valid_lft forever preferred_lft forever
   inet6 fe80::5054:ff:fe11:2233/64 scope link
      valid_lft forever preferred_lft forever
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dig" tabindex="-1"><a class="header-anchor" href="#dig" aria-hidden="true">#</a> <code>dig</code></h4><p>The <code>dig</code> command is used for querying DNS servers for various DNS records.</p><p>To query DNS records for a domain, use the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">dig</span> example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Output:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; example.com
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 58283
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 512
;; QUESTION SECTION:
;example.com.            IN  A

;; ANSWER SECTION:
example.com.        604800  IN  A   93.184.216.34

;; Query time: 1 msec
;; SERVER: 192.168.1.1#53(192.168.1.1)
;; WHEN: Mon Feb 07 18:23:10 PST 2024
;; MSG SIZE  rcvd: 55
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="host" tabindex="-1"><a class="header-anchor" href="#host" aria-hidden="true">#</a> <code>host</code></h4><p>The <code>host</code> command is used to perform DNS lookups. It retrieves domain name to IP address mappings by querying DNS servers.</p><p>To perform a DNS lookup for a domain name, use the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">host</span> example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Output:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>example.com has address 93.184.216.34
example.com has IPv6 address 2606:2800:220:1:248:1893:25c8:1946
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="others" tabindex="-1"><a class="header-anchor" href="#others" aria-hidden="true">#</a> Others</h2><h4 id="grep" tabindex="-1"><a class="header-anchor" href="#grep" aria-hidden="true">#</a> <code>grep</code></h4><p>Search for specific patterns in files.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token string">&quot;pattern&quot;</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-i</code>: Ignore case distinctions.</li><li><code>-r</code>: Recursively search subdirectories.</li><li><code>-n</code>: Show line numbers.</li></ul><h4 id="sed" tabindex="-1"><a class="header-anchor" href="#sed" aria-hidden="true">#</a> <code>sed</code></h4><p>Stream editor for modifying and formatting text.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;s/old_text/new_text/&#39;</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>&#39;s/old_text/new_text/&#39;</code>: Substitute <code>old_text</code> with <code>new_text</code>.</li><li><code>-i</code>: Edit files in place.</li></ul><h4 id="awk" tabindex="-1"><a class="header-anchor" href="#awk" aria-hidden="true">#</a> <code>awk</code></h4><p>Text processing tool for extracting and manipulating data.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>&#39;{print $1}&#39;</code>: Print the first field of each line.</li><li><code>-F</code>: Set field separator.</li></ul><h4 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> <code>git</code></h4><p><img src="`+c+`" alt="git"></p><p>Version control system for tracking changes in code.</p><p><strong>Example:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone repository_url
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>clone</code>: Clone a repository.</li><li><code>add</code>: Add file contents with the index.</li><li><code>commit</code>: create a new commit from the current index</li><li><code>push</code>: push local commit to the remote branch</li><li><code>pull</code>: retrieve commits from the remote branch</li></ul><h2 id="exercises" tabindex="-1"><a class="header-anchor" href="#exercises" aria-hidden="true">#</a> Exercises</h2>`,90),g={class:"custom-container tip"},k=e("p",{class:"custom-container-title"},"Requirement For Windows",-1),f={href:"https://learn.microsoft.com/fr-fr/windows/wsl/install",target:"_blank",rel:"noopener noreferrer"},y=i(`<h3 id="🧪-exercise-1-file-system-management" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-1-file-system-management" aria-hidden="true">#</a> 🧪 Exercise 1 - File System Management</h3><p><strong>Objective:</strong> Create a script that organizes files in a directory, lists permissions, and performs basic operations as follow</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>drwxr-xr-x <span class="token punctuation">]</span>  personnages
├── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  mascottes
│   ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  beastie
│   ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  bibendum
│   ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  mario
│   └── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  sonic
└── <span class="token punctuation">[</span>drwxr-xr-x <span class="token punctuation">]</span>  super heros
    ├── <span class="token punctuation">[</span>drwxr-xr-x <span class="token punctuation">]</span>  femmes
    │   ├── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  cape
    │   │   ├── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  batgirl
    │   │   └── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  wonderwoman
    │   └── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  sans cape
    │       ├── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  electra
    │       └── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  superwoman
    └── <span class="token punctuation">[</span>drwxr-xr-x <span class="token punctuation">]</span>  hommes
        ├── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  cape
        │   ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  batman
        │   ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  superman
        │   └── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  thor
        └── <span class="token punctuation">[</span>drwxrwxr-x <span class="token punctuation">]</span>  sans cap
            ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  antman
            ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  daredevil
            ├── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  linuxman
            └── <span class="token punctuation">[</span>-rw-r--r-- <span class="token punctuation">]</span>  spiderman
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Don&#39;t you forget to add the right permissions to the script file...</p><details class="custom-container details"><summary>solution</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># This script creates a directory structure and files for a fictional character hierarchy.</span>
<span class="token comment"># The directories and files are created based on the arrays \`directories\` and \`files\`.</span>
<span class="token comment"># The root directory can be specified as an argument when running the script.</span>
<span class="token comment"># If no argument is provided, the current directory is used as the root.</span>

<span class="token comment"># Check if a root directory is specified as an argument</span>
<span class="token comment"># If not, use the current directory as the root</span>
<span class="token assign-left variable">root_dir</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${1<span class="token operator">:-</span>.}</span>&quot;</span>

<span class="token comment"># Define the directory structure</span>
<span class="token comment"># Each element in the \`directories\` array represents a directory path</span>
<span class="token assign-left variable">directories</span><span class="token operator">=</span><span class="token punctuation">(</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/mascottes&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/femmes/cape&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/femmes/sans cape&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/cape&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/sans cape&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/femmes/cape/batgirl&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/femmes/cape/wonderwoman&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/femmes/sans cape/electra&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/femmes/sans cape/superwoman&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment"># Define the files to be created</span>
<span class="token comment"># Each element in the \`files\` array represents a file path</span>
<span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token punctuation">(</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/mascottes/beastie&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/mascottes/bibendum&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/mascottes/mario&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/mascottes/sonic&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/cape/batman&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/cape/superman&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/cape/thor&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/sans cape/antman&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/sans cape/daredevil&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/sans cape/linuxman&quot;</span>
    <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages/super heros/hommes/sans cape/spiderman&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment"># Create directories</span>
<span class="token comment"># For each directory in the \`directories\` array, create the directory with permissions set to 775</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">dir</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${directories<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token function">mkdir</span> <span class="token parameter variable">-m</span> <span class="token number">775</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;<span class="token variable">$dir</span>&quot;</span>
<span class="token keyword">done</span>

<span class="token comment"># Create files</span>
<span class="token comment"># For each file in the \`files\` array, create the file with permissions set to 664</span>
<span class="token comment"># If the \`file\` variable is empty, print an error message and skip the file creation</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${files<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token variable">$file</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Creating file: <span class="token variable">$file</span>&quot;</span>  <span class="token comment"># Log the file being created</span>
        <span class="token function">touch</span> <span class="token string">&quot;<span class="token variable">$file</span>&quot;</span>
        <span class="token function">chmod</span> <span class="token number">664</span> <span class="token string">&quot;<span class="token variable">$file</span>&quot;</span>  <span class="token comment"># Change permissions to 664</span>
    <span class="token keyword">else</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Error: file variable is empty&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>

<span class="token comment"># Display the permissions of the created directories and files using the \`ls\` command</span>
<span class="token function">ls</span> <span class="token parameter variable">-lR</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto <span class="token string">&quot;<span class="token variable">$root_dir</span>/personnages&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="🧪-exercise-1-bis-file-system-management" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-1-bis-file-system-management" aria-hidden="true">#</a> 🧪 Exercise 1-Bis - File System Management</h3><ol><li>It seems that &quot;linuxman&quot; is not a superhero. In fact, he is called &quot;Tux&quot; and should be located in the &quot;mascots&quot; directory. Using the &quot;mv&quot; command, move the file &quot;linuxman&quot; to &quot;tux&quot; in the mascots directory.</li><li>Rename the directory &quot;superheroes&quot; to &quot;comics&quot;.</li><li>Using the &quot;echo&quot; command: write into the file &quot;batman&quot; the content &quot;Bruce Wayne hides behind this character&quot;.</li><li>Using the &quot;echo&quot; command: append to the file &quot;batman&quot; the content &quot;he lives in Gotham&quot;.</li><li>Using the &quot;echo&quot; command: write into the file &quot;daredevil&quot; the content &quot;Homer Simpson hides behind this character&quot;.</li><li>Oh no, it&#39;s not Homer. With the &quot;echo&quot; command, overwrite the content of the file &quot;daredevil&quot; with the content &quot;daredevil is a blind comic character&quot;.</li><li>Using the &quot;cat&quot; command, in a single command, copy the contents of the &quot;batman&quot; and &quot;daredevil&quot; files into the &quot;mascots/mixdarbat&quot; file.</li><li>Switch to root mode.</li><li>Create a user named &quot;fanboy&quot;.</li><li>Copy the directory &quot;characters&quot; into /home/fanboy.</li><li>Use the &quot;chown&quot; command to change the owner and group of this directory.</li><li>Create a symbolic link &quot;persofanboy&quot; pointing to /home/fanboy/characters.</li><li>Create a symbolic link &quot;perso_yourname&quot; pointing to /home/yourname/characters.</li><li>Using the &quot;ls&quot; command, save the complete tree structure of /home/fanboy/characters into a file &quot;14.txt&quot;.</li><li>In the file &quot;14.txt&quot;, you will find lines with the word &quot;total&quot;. Using the grep command, copy the contents of the file &quot;14.txt&quot; into the file &quot;15.txt&quot; by removing occurrences of the word &quot;total&quot;.</li><li>Save the last 250 lines of your history in the file &quot;myhistory&quot; by removing any lines where you used the &quot;cd&quot; command. You will use the grep command again.</li></ol><p>Don&#39;t you forget to add the right permissions to the script file...</p><details class="custom-container details"><summary>solution</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 1. Move linuxman to tux in mascots directory</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> personnages/mascottes
<span class="token function">mv</span> personnages/super<span class="token punctuation">\\</span> heros/hommes/sans<span class="token punctuation">\\</span> cape/linuxman personnages/mascottes/tux

<span class="token comment"># 2. Rename the directory superheroes to comics</span>
<span class="token function">mv</span> personnages/super<span class="token punctuation">\\</span> heros personnages/comics

<span class="token comment"># 3. Write into the file batman</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Bruce Wayne hides behind this character&quot;</span> <span class="token operator">&gt;</span> personnages/comics/hommes/cape/batman

<span class="token comment"># 4. Append to the file batman</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;He lives in Gotham&quot;</span> <span class="token operator">&gt;&gt;</span> personnages/comics/hommes/cape/batman

<span class="token comment"># 5. Write into the file daredevil</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Homer Simpson hides behind this character&quot;</span> <span class="token operator">&gt;</span> personnages/comics/hommes/sans<span class="token punctuation">\\</span> cape/daredevil

<span class="token comment"># 6. Overwrite the content of the file daredevil</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;DareDevil is a blind comic character&quot;</span> <span class="token operator">&gt;</span> personnages/comics/hommes/sans<span class="token punctuation">\\</span> cape/daredevil

<span class="token comment"># 7. Copy the contents of batman and daredevil into mascots/mixdarbat</span>
<span class="token function">cat</span> personnages/comics/hommes/cape/batman personnages/comics/hommes/sans<span class="token punctuation">\\</span> cape/daredevil <span class="token operator">&gt;</span> personnages/mascottes/mixdarbat

<span class="token comment"># 9. Create a user named &quot;fanboy&quot;</span>
<span class="token comment"># If the user already exists, ignore the error</span>
<span class="token function">sudo</span> <span class="token function">useradd</span> <span class="token parameter variable">-m</span> fanboy <span class="token operator">||</span> <span class="token boolean">true</span>

<span class="token comment"># 10. Copy the directory characters into /home/fanboy</span>
<span class="token comment"># Use sudo to ensure you have the necessary permissions</span>
<span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-r</span> personnages /home/fanboy

<span class="token comment"># 11. Change owner and group of the directory</span>
<span class="token comment"># Use sudo to ensure you have the necessary permissions</span>
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> fanboy:fanboy /home/fanboy/personnages

<span class="token comment"># 12. Create a symbolic link &quot;persofanboy&quot; pointing to /home/fanboy/characters</span>
<span class="token comment"># Use sudo to ensure you have the necessary permissions</span>
<span class="token comment"># Add the -f option to force the creation of the symbolic link</span>
<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-sf</span> /home/fanboy/personnages /home/fanboy/persofanboy

<span class="token comment"># 13. Create a symbolic link &quot;perso_yourname&quot; pointing to /home/yourname/characters</span>
<span class="token comment"># Replace &quot;yourname&quot; with your actual username</span>
<span class="token assign-left variable">yourname</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">whoami</span><span class="token variable">)</span></span>  <span class="token comment"># Get the current username</span>
<span class="token function">cp</span> <span class="token parameter variable">-r</span> personnages /home/<span class="token variable">$yourname</span>/
<span class="token comment"># Add the -f option to force the creation of the symbolic link</span>
<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-sf</span> /home/<span class="token variable">$yourname</span>/personnages /home/<span class="token variable">$yourname</span>/perso_<span class="token variable">$yourname</span>

<span class="token comment"># 14. Save the complete tree structure of /home/fanboy/characters into 14.txt</span>
<span class="token comment"># Use sudo to ensure you have the necessary permissions</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> tree
<span class="token function">sudo</span> tree /home/fanboy/personnages <span class="token operator">&gt;</span> <span class="token number">14</span>.txt

<span class="token comment"># 15. Remove occurrences of the word &quot;directories&quot; from 14.txt and save into 15.txt</span>
<span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;directories&quot;</span> <span class="token number">14</span>.txt <span class="token operator">&gt;</span> <span class="token number">15</span>.txt

<span class="token comment"># 16. Save the last 250 lines of history into myhistory, removing lines with &quot;cd&quot; command</span>
<span class="token comment"># Use the HISTFILE environment variable to get the path to your .bash_history file</span>
<span class="token assign-left variable">history_file_path</span><span class="token operator">=</span><span class="token environment constant">$HISTFILE</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token variable">$history_file_path</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;cd&quot;</span> <span class="token variable">$history_file_path</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">250</span> <span class="token operator">&gt;</span> myhistory
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Error: .bash_history file does not exist&quot;</span>
<span class="token keyword">fi</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="🧪-exercise-2-cron-unix-machines-only" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-2-cron-unix-machines-only" aria-hidden="true">#</a> 🧪 Exercise 2 - Cron (Unix machines only)</h3><p>Add a cron that recreate the root folder &quot;personnages&quot; at your user home each 5 min with a suffix number ( personnages_9h05, personnages_9h10...)</p><details class="custom-container details"><summary>solution</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>*/5 * * * * /bin/bash /path/to/your/script.sh /root/folder/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token punctuation">\\</span>%Y-<span class="token punctuation">\\</span>%m-<span class="token punctuation">\\</span>%d<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><h3 id="🧪-exercise-2-bis-cron-on-gitpod" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-2-bis-cron-on-gitpod" aria-hidden="true">#</a> 🧪 Exercise 2-Bis - Cron on GitPod</h3><p>Unfortunately, Gitpod does not support <code>cron</code> jobs because it&#39;s a cloud-based development environment and each workspace is ephemeral. This means that the workspace does not maintain state between sessions, so any <code>cron</code> jobs you set up would be lost when the workspace is stopped. However, you can install <code>cron</code> in your Gitpod workspace using<code> apt-get.</code> Please note that even though you can install and start the cron daemon, it will not persist after the workspace is stopped. Here&#39;s how you can install and start cron:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">cron</span>
<span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">cron</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After running these commands, you can verify that cron is running by using the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">cron</span> status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can then create a cron job by creating a script that will add an entry to the crontab:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># Define the crontab entry</span>
<span class="token assign-left variable">CRON_ENTRY</span><span class="token operator">=</span><span class="token string">&quot;*/5 * * * * /bin/bash /path/to/your/script.sh /root/folder/\\<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token punctuation">\\</span>%Y-<span class="token punctuation">\\</span>%m-<span class="token punctuation">\\</span>%d<span class="token variable">)</span></span>&quot;</span>

<span class="token comment"># Add the entry to crontab</span>
<span class="token punctuation">(</span>crontab -l<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$CRON_ENTRY</span>&quot;</span> <span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">crontab</span> -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Of course, you will have to modify the script so <code>/path/to/your/script.sh</code> points to your earlier <code>bash</code> script that creates the root folder &quot;personnages&quot; at your user home. The whole script could then look like:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env bash</span>

<span class="token comment"># This script sets up a cron job that runs a specific script every 5 minutes.</span>
<span class="token comment"># The script that is run is \`personnages.sh\`, located in the current working directory.</span>
<span class="token comment"># The cron job passes a timestamped directory name as an argument to \`personnages.sh\`.</span>

<span class="token comment"># Update the package lists for upgrades and new package installations</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> update

<span class="token comment"># Install the cron package</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">cron</span>

<span class="token comment"># Start the cron service</span>
<span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">cron</span> start

<span class="token comment"># Check the status of the cron service</span>
<span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">cron</span> status

<span class="token comment"># Define the script path</span>
<span class="token comment"># This is the path to the script that the cron job will run.</span>
<span class="token comment"># It&#39;s set to \`personnages.sh\` in the current working directory.</span>
<span class="token assign-left variable">SCRIPT_PATH</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/personnages.sh&quot;</span>

<span class="token comment"># Define the date format</span>
<span class="token comment"># This is the format of the timestamp that will be appended to the directory name.</span>
<span class="token comment"># It includes the year, month, day, hour, and minute.</span>
<span class="token assign-left variable">DATE_FORMAT</span><span class="token operator">=</span><span class="token string">&quot;\\<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token punctuation">\\</span>%Y-<span class="token punctuation">\\</span>%m-<span class="token punctuation">\\</span>%d-<span class="token punctuation">\\</span>%H-<span class="token punctuation">\\</span>%M<span class="token variable">)</span></span>&quot;</span>

<span class="token comment"># Define the crontab entry</span>
<span class="token comment"># This is the cron job that will be added to the crontab.</span>
<span class="token comment"># It runs the \`personnages.sh\` script every 5 minutes, passing a timestamped directory name as an argument.</span>
<span class="token assign-left variable">CRON_ENTRY</span><span class="token operator">=</span><span class="token string">&quot;*/5 * * * * /bin/bash <span class="token variable">$SCRIPT_PATH</span> <span class="token environment constant">$HOME</span>/personnages-<span class="token variable">$DATE_FORMAT</span>&quot;</span>

<span class="token comment"># Add the entry to crontab</span>
<span class="token comment"># This command adds the defined cron job to the crontab.</span>
<span class="token comment"># It first lists the existing crontab entries, then appends the new entry, and finally installs the new crontab.</span>
<span class="token punctuation">(</span>crontab -l<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$CRON_ENTRY</span>&quot;</span> <span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">crontab</span> -

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🧪-exercise-2-ter-make-cron-available-on-gitpod-from-the-start" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-2-ter-make-cron-available-on-gitpod-from-the-start" aria-hidden="true">#</a> 🧪 Exercise 2-Ter - Make Cron available on GitPod from the start</h3><p>To make <code>cron</code> available on GitPod from the start, you need to customize the Docker image used by GitPod. I know, we have not talked about Docker yet, but it is a containerization platform that allows you to create custom images with the tools and dependencies you need. This can be done by creating a <code>.gitpod.Dockerfile</code> in your repository with the necessary commands to install cron. Here is an example of what your <code>.gitpod.Dockerfile</code> could look like:</p><div class="language-Dockerfile line-numbers-mode" data-ext="Dockerfile"><pre class="language-Dockerfile"><code># This Dockerfile is used to create a custom Gitpod workspace image.
# Gitpod is a service that provides ready-to-code development environments in the cloud.

# The base image is gitpod/workspace-python, which includes a python development environment.
FROM gitpod/workspace-python

# Switch to the root user to have the necessary permissions for the following operations.
USER root

# Install cron and tree packages.
# Cron is a time-based job scheduler in Unix-like operating systems.
# Tree is a recursive directory listing program that produces a depth-indented listing of files.
# The apt-get update command is used to download package information from all configured sources.
# The apt-get install command is used to install the specified packages.
RUN apt-get update &amp;&amp; apt-get install -y cron tree

# Start the cron service.
# The service command is used to run a System V init script.
RUN service cron start

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This <code>Dockerfile</code> starts from the <code>gitpod/workspace-python</code> image, which is a standard image provided by GitPod that includes a python development environment. It then switches to the <code>root</code> user to install <code>cron</code> and start the <code>cron</code> service. Next, you need to reference this <code>Dockerfile</code> in your <code>.gitpod.yml</code> configuration file. Here is an example of what your <code>.gitpod.yml</code> could look like:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># This is the .gitpod.yml configuration file for Gitpod.</span>
<span class="token comment"># Gitpod is a service that provides ready-to-code development environments in the cloud.</span>

<span class="token comment"># The &#39;image&#39; field specifies the Docker image to use for the workspace.</span>
<span class="token comment"># The &#39;file&#39; field under &#39;image&#39; points to the Dockerfile that defines the Docker image.</span>
<span class="token key atrule">image</span><span class="token punctuation">:</span>
  <span class="token key atrule">file</span><span class="token punctuation">:</span> .gitpod.Dockerfile

<span class="token comment"># The &#39;tasks&#39; field is a list of tasks to run when the workspace starts.</span>
<span class="token comment"># Each task can have &#39;init&#39; and &#39;command&#39; fields.</span>
<span class="token comment"># The &#39;init&#39; field is a command that is run when the workspace is first initialized.</span>
<span class="token comment"># The &#39;command&#39; field is a command that is run after the &#39;init&#39; command.</span>
<span class="token key atrule">tasks</span><span class="token punctuation">:</span>
  <span class="token comment"># This task makes all .sh files in any subdirectory of the current directory executable.</span>
  <span class="token punctuation">-</span> <span class="token key atrule">init</span><span class="token punctuation">:</span> chmod +x ./<span class="token important">*/*.sh</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Why would we need to make all script executable? You&#39;re maybe working with a Windows machine and you need to make the script executable before running it. The permissions in Windows aren&#39;t the same as in Unix-based systems, so you need to set the executable permission explicitly. You can do it through <code>git</code> though, but it&#39;s a bit more complicated. Git has a feature called Git attributes that allows you to define attributes on a per-path basis. You can use this feature to change the file permissions of specific files in your repository.</p><p>To make a file executable in Git, you need to use the <code>update-index</code> command with the <code>--chmod=+x</code> option. Here&#39;s how you can do it:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> update-index <span class="token parameter variable">--chmod</span><span class="token operator">=</span>+x path_to_your_file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Replace <code>path_to_your_file</code> with the path to the file you want to make executable.</p><p>After running this command, the file will be marked as executable in the Git repository. The next time you or someone else checks out this file from the Git repository (at least, with operating systems that can deal correctly with file permissions), it will have the executable permission.</p><p>Remember to commit this change and push it to the remote repository:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Make file executable&quot;</span>
<span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🧪-exercise-3-systemd-linux-machines-only" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-3-systemd-linux-machines-only" aria-hidden="true">#</a> 🧪 Exercise 3 - SystemD ( Linux machines only)</h3><p>Add the script as a linux service with the same rule, each 5 min with a suffix number ( personnages_9h05, personnages_9h10...)</p>`,35),x={class:"custom-container tip"},w=e("p",{class:"custom-container-title"},"For MacOS",-1),q={href:"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html",target:"_blank",rel:"noopener noreferrer"},_=i(`<details class="custom-container details"><summary>solution</summary><p><em>/etc/systemd/system/folder_creation.service</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Folder Creation Service
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>oneshot
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/bin/bash /path/to/your/script.sh /root/folder/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token punctuation">\\</span>%Y-<span class="token punctuation">\\</span>%m-<span class="token punctuation">\\</span>%d<span class="token variable">)</span></span>

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>/etc/systemd/system/folder_creation.timer</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Folder Creation Timer

<span class="token punctuation">[</span>Timer<span class="token punctuation">]</span>
<span class="token assign-left variable">OnUnitActiveSec</span><span class="token operator">=</span>5m
<span class="token assign-left variable">Unit</span><span class="token operator">=</span>folder_creation.service

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>timers.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl start folder_creation.timer
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> folder_creation.timer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="🧪-exercice-4-git" tabindex="-1"><a class="header-anchor" href="#🧪-exercice-4-git" aria-hidden="true">#</a> 🧪 Exercice 4 - Git</h3>`,2),T={class:"custom-container tip"},S=e("p",{class:"custom-container-title"},"learn more about git",-1),P={href:"https://learngitbranching.js.org/?locale=fr_FR",target:"_blank",rel:"noopener noreferrer"},D={href:"https://training.github.com/downloads/fr/github-git-cheat-sheet.pdf",target:"_blank",rel:"noopener noreferrer"},E=e("ol",null,[e("li",null,"Create an account on github.com"),e("li",null,"Create a project"),e("li",null,"push this code to the project")],-1),I=e("h3",{id:"what-about-a-short-quiz-now",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-about-a-short-quiz-now","aria-hidden":"true"},"#"),s(" What about a short quiz now?")],-1),C={href:"https://www.opinionstage.com/page/81b097da-2053-4634-b6b9-70ea5c801236",target:"_blank",rel:"noopener noreferrer"},A=e("h3",{id:"🧪-exercice-5-onpremise-web-server",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#🧪-exercice-5-onpremise-web-server","aria-hidden":"true"},"#"),s(" 🧪 Exercice 5 - onPremise Web server")],-1),R={href:"https://www.php.net/manual/fr/book.pdo.php",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,[e("img",{src:d,alt:"onpremise"})],-1),U=e("p",null,[s("Use "),e("code",null,"ping"),s(", "),e("code",null,"telnet"),s(", "),e("code",null,"ip"),s(", "),e("code",null,"netstat"),s(" during your services deployment")],-1),$=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"Some network recalls"),e("p",null,[e("strong",null,"What happens when you type a URL into your browser?")]),e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/AlkDbnbv7dk",title:"What happens when you type a URL into your browser?",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}),e("p",null,[e("strong",null,"What Is REST API? Examples And How To Use It")]),e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/-mN3VyJuCjM",title:"What Is REST API? Examples And How To Use It",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}),e("p",null,[e("strong",null,"(SSL, TLS, HTTPS Explained)")]),e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/j9QmMEWmcfo",title:"SSL, TLS, HTTPS Explained",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}),e("p",null,[e("strong",null,"(HTTP/1 to HTTP/2 to HTTP/3)")]),e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/a-sBfyiXysI",title:"HTTP/1 to HTTP/2 to HTTP/3",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}),e("p",null,"https://github.com/gitpod-io/gitpod/issues/736#issuecomment-658879847")],-1),G={class:"custom-container details"},M=i(`<summary>solution</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># Update package index</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update

<span class="token comment"># Install Apache</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> apache2

<span class="token comment"># Start Apache service</span>
<span class="token function">sudo</span> systemctl start apache2

<span class="token comment"># Enable Apache service to start on boot</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> apache2

<span class="token comment"># Install Telnet</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> telnet

<span class="token comment"># Install Ping (usually pre-installed)</span>
<span class="token comment"># If not installed, you can install with:</span>
<span class="token comment"># sudo apt install -y iputils-ping</span>

<span class="token comment"># Check Apache status</span>
<span class="token function">sudo</span> systemctl status apache2

<span class="token comment"># Test Apache reachability</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Testing Apache reachability...&quot;</span>
<span class="token keyword">if</span> <span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-I</span> localhost:80 <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;HTTP/1.1 200 OK&quot;</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Apache is reachable.&quot;</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Apache is not reachable.&quot;</span>
<span class="token keyword">fi</span>

<span class="token comment"># Test Telnet reachability</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Testing Telnet reachability...&quot;</span>
<span class="token keyword">if</span> telnet localhost <span class="token number">80</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;Escape character is&quot;</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Telnet is reachable.&quot;</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Telnet is not reachable.&quot;</span>
<span class="token keyword">fi</span>

<span class="token comment"># Test Ping reachability</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Testing Ping reachability...&quot;</span>
<span class="token keyword">if</span> <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">4</span> localhost <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;4 packets transmitted, 4 received&quot;</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Ping is reachable.&quot;</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Ping is not reachable.&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🧪-exercice-5-bis-gitpod-web-server" tabindex="-1"><a class="header-anchor" href="#🧪-exercice-5-bis-gitpod-web-server" aria-hidden="true">#</a> 🧪 Exercice 5-Bis - GitPod Web server</h3><p>Let&#39;s create a simple web server with an associated database using GitPod. What is the main difference between this exercise and the previous one? What is the main hiccup you may encounter?</p><h4 id="🚀-make-mariadb-available-outside-of-gitpod" tabindex="-1"><a class="header-anchor" href="#🚀-make-mariadb-available-outside-of-gitpod" aria-hidden="true">#</a> 🚀 Make mariadb available outside of GitPod</h4>`,5),H={href:"https://github.com/gounthar/DevOpsGitGuide-Shell-Exercice-5-MariaDB",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.gitpod.io/docs/configure/user-settings/browser-extension",target:"_blank",rel:"noopener noreferrer"},L={href:"https://gitpod.io/?autostart=true#https://github.com/gounthar/DevOpsGitGuide-Shell-Exercice-5-MariaDB",target:"_blank",rel:"noopener noreferrer"},B=e("img",{src:"https://gitpod.io/button/open-in-gitpod.svg",alt:"Open in Gitpod"},null,-1),F={href:"https://ngrok.com/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/gounthar/DevOpsGitGuide-Shell-Exercice-5-MariaDB/blob/main/.gitpod.Dockerfile#L47",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://ngrok.com/signup",target:"_blank",rel:"noopener noreferrer"},z=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ngrok config add-authtoken 2h6McmucvaInNhFsdfsffsd54564Kgf3_7adbmgRez1zbaumkvDkxX
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Once you have ngrok installed, you can expose your MariaDB server to the public internet using the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ngrok tcp <span class="token number">3306</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You should then see a public URL that you can use to connect to your MariaDB server from outside GitPod.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ngrok                                                                                                                                                                                                                                                                                                                                                                                       <span class="token punctuation">(</span>Ctrl+C to quit<span class="token punctuation">)</span>

New guides https://ngrok.com/docs/guides/site-to-site-apis/

Session Status                online                                                                                                                                                                                                                                                                                                                                                                        
Account                       Bruno Verachten <span class="token punctuation">(</span>Plan: Free<span class="token punctuation">)</span>                                                                                                                                                                                                                                                                                                                                                  
Version                       <span class="token number">3.10</span>.0                                                                                                                                                                                                                                                                                                                                                                        
Region                        Europe <span class="token punctuation">(</span>eu<span class="token punctuation">)</span>                                                                                                                                                                                                                                                                                                                                                                   
Web Interface                 http://127.0.0.1:4040                                                                                                                                                                                                                                                                                                                                                         
Forwarding                    tcp://6.tcp.eu.ngrok.io:17183 -<span class="token operator">&gt;</span> localhost:3306

Connections                   ttl     opn     rt1     rt5     p50     p90                                                                                                                                                                                                                                                                                                                                   
<span class="token number">0</span>       <span class="token number">0</span>       <span class="token number">0.00</span>    <span class="token number">0.00</span>    <span class="token number">0.00</span>    <span class="token number">0.00</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For those of you who already have docker, it&#39;s now time to test your MariaDB connection from your local machine.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> mariadb mariadb <span class="token parameter variable">--host</span> <span class="token number">6</span>.tcp.eu.ngrok.io <span class="token parameter variable">-P</span> <span class="token number">17183</span> <span class="token parameter variable">--user</span> example-user <span class="token parameter variable">--password</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="🚀-run-apache-inside-gitpod" tabindex="-1"><a class="header-anchor" href="#🚀-run-apache-inside-gitpod" aria-hidden="true">#</a> 🚀 Run Apache inside GitPod</h4>`,8),j={href:"https://github.com/gounthar/DevOpsGitGuide-Shell-Exercice-5-Apache",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.gitpod.io/docs/configure/user-settings/browser-extension",target:"_blank",rel:"noopener noreferrer"},K={href:"https://gitpod.io/new/?autostart=true#https://github.com/gounthar/DevOpsGitGuide-Shell-Exercice-5-Apache",target:"_blank",rel:"noopener noreferrer"},Q=e("img",{src:"https://gitpod.io/button/open-in-gitpod.svg",alt:"Open in Gitpod"},null,-1),J=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> apache2 status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can also test the reachability of Apache using the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-I</span> localhost:80 <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;HTTP/1.1 200 OK&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can go one level further and test the reachability of Apache using Telnet:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>telnet localhost <span class="token number">80</span>
GET / HTTP/1.0

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, what about trying to connect to your MariaDB server from your Apache server?</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-h</span> <span class="token number">6</span>.tcp.eu.ngrok.io <span class="token parameter variable">-P</span> <span class="token number">17183</span> <span class="token parameter variable">-u</span> example-user <span class="token parameter variable">-p</span>
Enter password: 
Welcome to the MariaDB monitor.  Commands end with <span class="token punctuation">;</span> or <span class="token punctuation">\\</span>g.
Your MariaDB connection <span class="token function">id</span> is <span class="token number">34</span>
Server version: <span class="token number">10.6</span>.16-MariaDB-0ubuntu0.22.04.1 Ubuntu <span class="token number">22.04</span>

Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">2000</span>, <span class="token number">2018</span>, Oracle, MariaDB Corporation Ab and others.

Type <span class="token string">&#39;help;&#39;</span> or <span class="token string">&#39;\\h&#39;</span> <span class="token keyword">for</span> help. Type <span class="token string">&#39;\\c&#39;</span> to <span class="token function">clear</span> the current input statement.

MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or even lower, you can try to connect to your MariaDB server through telnet:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>telnet <span class="token number">6</span>.tcp.eu.ngrok.io <span class="token number">17183</span>
Trying <span class="token number">3.124</span>.142.205<span class="token punctuation">..</span>.
Connected to <span class="token number">6</span>.tcp.eu.ngrok.io.
Escape character is <span class="token string">&#39;^]&#39;</span><span class="token builtin class-name">.</span>
j
<span class="token number">5.5</span>.5-10.6.16-MariaDB-0ubuntu0.22.04.1<span class="token operator">!</span>z/x2.0EI�~\`Ds:dia-<span class="token punctuation">[</span>c_mysql_native_password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s access the built-in PHP page from Apache to check the connection to MariaDB.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-s</span> localhost/index.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Nothing is happening. Why? Let&#39;s have a look at the logs:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tail</span> <span class="token parameter variable">-f</span> /var/log/apache2/error.log <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="🧪-exercise-6-ssh" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-6-ssh" aria-hidden="true">#</a> 🧪 Exercise 6 - SSH</h3>`,14),X={href:"https://www.openssh.com/",target:"_blank",rel:"noopener noreferrer"},Z=i(`<details class="custom-container details"><summary>solution</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># Update package index</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update

<span class="token comment"># Install OpenSSH server</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> openssh-server

<span class="token comment"># Start OpenSSH service</span>
<span class="token function">sudo</span> systemctl start <span class="token function">ssh</span>

<span class="token comment"># Enable OpenSSH service to start on boot</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">ssh</span>

<span class="token comment"># Install Ping (if not already installed)</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> iputils-ping

<span class="token comment"># Replace &#39;remote_ip_address&#39; with the IP address of the remote computer</span>
<span class="token assign-left variable">remote_ip_address</span><span class="token operator">=</span><span class="token string">&quot;REMOTE_IP_ADDRESS&quot;</span>

<span class="token comment"># Test Ping reachability to the remote computer</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Testing Ping reachability to <span class="token variable">$remote_ip_address</span> ...&quot;</span>
<span class="token keyword">if</span> <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">4</span> <span class="token variable">$remote_ip_address</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;4 packets transmitted, 4 received&quot;</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Ping to <span class="token variable">$remote_ip_address</span> is successful.&quot;</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Ping to <span class="token variable">$remote_ip_address</span> failed.&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token comment"># Attempt SSH connection to the remote computer</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Attempting SSH connection to <span class="token variable">$remote_ip_address</span> ...&quot;</span>
<span class="token keyword">if</span> <span class="token function">ssh</span> <span class="token variable">$remote_ip_address</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">ConnectTimeout</span><span class="token operator">=</span><span class="token number">10</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;SSH connection to <span class="token variable">$remote_ip_address</span> successful.&quot;</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;SSH connection to <span class="token variable">$remote_ip_address</span> failed.&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,1);function ee(se,ne){const n=o("ExternalLinkIcon");return r(),l("div",null,[u,e("div",m,[v,e("p",null,[s("Use LaunchAgent or LaunchDaemon service implementation "),e("a",h,[s("here"),a(n)])])]),b,e("div",g,[k,e("p",null,[s("Linux subsystem for windows "),e("a",f,[s("here"),a(n)])])]),y,e("div",x,[w,e("p",null,[s("Use LaunchAgent or LaunchDaemon service implementation "),e("a",q,[s("here"),a(n)])])]),_,e("div",T,[S,e("p",null,[e("a",P,[s("Learn Git Branching "),a(n)]),e("a",D,[s("Github cheatsheet"),a(n)])])]),E,I,e("p",null,[e("a",C,[s("Quiz"),a(n)])]),A,e("p",null,[s("Create an Apache Web server and a MariaDB by pairing them with 2 laptops as follows. Serve a simple PHP content connected to the MariaDB with "),e("a",R,[s("PDO"),a(n)]),s(".")]),O,U,$,e("details",G,[M,e("p",null,[s("By default, GitPod workspaces are isolated and not accessible from the public internet. This means that services running inside a GitPod workspace are not directly reachable from outside the workspace. Go to our "),e("a",H,[s("repository"),a(n)]),s(" and click on the GitPod button (you have installed the "),e("a",N,[s("GitPod extension"),a(n)]),s(", right?). If you don't, you can click on the following link: "),e("a",L,[B,a(n)]),s(".")]),e("p",null,[s("There aren't many options to make a database available outside of GitPod. One way to achieve this is to use a tunneling service like "),e("a",F,[s("ngrok"),a(n)]),s(". Ngrok allows you to expose local servers behind NATs and firewalls to the public internet over secure tunnels. First, you need to install ngrok in your GitPod workspace. You're lucky, it's already "),e("a",W,[s("part of your workspace"),a(n)]),s(".")]),e("p",null,[s("Now, you have to open an account on "),e("a",Y,[s("ngrok"),a(n)]),s(", and you will get an authentication token. Once you have it, you can add the authentication token to your ngrok configuration using the following command:")]),z,e("p",null,[s("To run Apache inside GitPod, you can go to the following "),e("a",j,[s("repository"),a(n)]),s(" and click on the GitPod button (you have installed the "),e("a",V,[s("GitPod extension"),a(n)]),s(", right?). If you don't, you can click on the following link: "),e("a",K,[Q,a(n)]),s('. You should see on the bottom right corner of your screen a message like "A service is available on port 80. Open Preview". You should then see a frame open within your current GitPod workspace showing the Apache default page. Now in the GitPod terminal, you can run the following command to check the Apache status:')]),J,e("p",null,[s("By pair create an "),e("a",X,[s("ssh server"),a(n)]),s(" on a laptop and try to connect from the other laptop.")]),Z])])}const ie=t(p,[["render",ee],["__file","index.html.vue"]]);export{ie as default};
